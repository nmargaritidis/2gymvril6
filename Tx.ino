
#include <SPI.h>        //Βιβλιοθήκη SPI για επικοινωνία με το nRF24L01+
#include "RF24.h"       //Η κύρια βιβλιοθήκη του nRF24L01+
#include "Wire.h"       //Για επικοινωνία
#include "I2Cdev.h"     //Για επικοινωνία με  MPU6050

#include "MPU6050.h"    //Η κύρια βιβλιοθήκη του MPU6050


//Καθορίστε το αντικείμενο για πρόσβαση και έλεγχο του γυροσκόπιου και του επιταχυνσιόμετρου (Δεν χρησιμοποιούμε τα δεδομένα γυροσκόπιου)
MPU6050 mpu;
int16_t ax, ay, az;
int16_t gx, gy, gz;

//Ορισμός πακέτου για την κατεύθυνση (άξονας X και άξονας Y)
int data[2];

//Ορισμός αντικειμένου από τη βιβλιοθήκη RF24 - Τα 8 και 9 είναι αριθμοί ψηφιακής ακίδας στους οποίους συνδέονται τα σήματα CE και CSN.
RF24 radio(8,9);

//Δημιουργήστε διευθύνσεις σωλήνα για την επικοινωνία                                
const uint64_t pipe = 0xE8E8F0F0E1LL;

void setup(void){
  Serial.begin(9600);
  Wire.begin();
  mpu.initialize();              //Αρχικοποιήστε το αντικείμενο MPU
  radio.begin();                 //Ξεκινήστε την επικοινωνία nRF24     
  radio.openWritingPipe(pipe);   //Ορίζει τη διεύθυνση του δέκτη στον οποίο το πρόγραμμα θα στείλει δεδομένα.
}

void loop(void){
  
  //Με αυτή τη συνάρτηση λαμβάνονται οι τιμές επιτάχυνσης και γυροσκοπίου των αξόνων.
  //Εάν θέλετε να ελέγξετε τον άξονα του αυτοκινήτου διαφορετικά, μπορείτε να αλλάξετε το όνομα του άξονα στην εντολή χάρτη.
  mpu.getMotion6(&ax, &ay, &az, &gx, &gy, &gz);

 //Στο αμφίδρομο έλεγχο, ο άξονας Χ (δεδομένα [0]) του MPU6050 επιτρέπει στο ρομπότ να κινείται προς τα εμπρός και προς τα πίσω.
 //Ο άξονας //Y (δεδομένα [1]) επιτρέπει στο ρομπότ να στρίβει δεξιά και αριστερά.
  data[0] = map(ax, -17000, 17000, 300, 400 ); //Αποστολή δεδομένων άξονα Χ
  data[1] = map(ay, -17000, 17000, 100, 200);  //Αποστολή δεδομένων άξονα Υ
  radio.write(data, sizeof(data));
  Serial.print("X axix data = ");
  Serial.println(data[0]);
  Serial.print("Y axix data = ");
  Serial.println(data[1]);
}
